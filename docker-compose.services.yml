version: '3.5'
services:
  nginx:
    container_name: cinema_ugc_nginx
    image: nginx:latest
    ports:
      - 8000:80
    networks:
      - ugc
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - /tmp/logs/nginx/:/var/log/nginx/
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://localhost:5044'
        tag: nginx

  postgres:
    image: postgres:latest
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: practikum
      POSTGRES_PASSWORD: practikum
    networks:
      - ugc

  # Kafka
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: INFO
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:32888:33888;zookeeper-3:42888:43888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"

    ports:
      - 22181:2181
      - 22888:2888
      - 23888:3888
    networks:
      - ugc

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: INFO
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:32888:33888;zookeeper-3:42888:43888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"

    ports:
      - 32181:2181
      - 32888:2888
      - 33888:3888
    networks:
      - ugc

  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: INFO
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:32888:33888;zookeeper-3:42888:43888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"

    ports:
      - 42181:2181
      - 42888:2888
      - 43888:3888
    networks:
      - ugc

  kafka-1:
    container_name: kafka-1
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - 29092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ugc

  kafka-2:
    container_name: kafka-2
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - 39092:9092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ugc

  # Clickhouse
  cl-zookeeper:
    image: zookeeper:3.5
    container_name: cl-zookeeper
    hostname: cl-zookeeper
    networks:
      - ugc

  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./etl/docker/clickhouse/data/node1:/etc/clickhouse-server
    depends_on:
      - cl-zookeeper
    networks:
      - ugc

  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./etl/docker/clickhouse/data/node2:/etc/clickhouse-server
    depends_on:
      - cl-zookeeper
    networks:
      - ugc

  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./etl/docker/clickhouse/data/node3:/etc/clickhouse-server
    depends_on:
      - cl-zookeeper
    networks:
      - ugc

  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./etl/docker/clickhouse/data/node4:/etc/clickhouse-server
    depends_on:
      - cl-zookeeper
    networks:
      - ugc

  logstash:
    container_name: cinema_logstash_logging
    hostname: cinema.logstash.logging
    image: docker.elastic.co/logstash/logstash:7.9.2
    depends_on:
      - elasticsearch_logging
      - nginx
    env_file:
      - ./docker/logstash/.env
    ports:
      - "5044:5044/udp"
    volumes:
      - ./docker/logstash/logstash.conf:/config/logstash.conf:ro
      - /tmp/logs/nginx/:/var/log/nginx/:ro
    command: logstash -f /config/logstash.conf
    networks:
      - logging

  elasticsearch_logging:
    container_name: cinema_elasticsearch_logging
    hostname: cinema.elasticsearch.logging
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data
    networks:
      - logging

  kibana:
    container_name: cinema_kibana_logging
    image: docker.elastic.co/kibana/kibana:7.9.2
    ports:
      - 5601:5601
    env_file:
      - ./docker/kibana/.env
    depends_on:
      - elasticsearch_logging
    networks:
      - logging


networks:
  ugc:
    external: True
  logging:
    external: true
